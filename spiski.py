#1 Создайте два любых списка и свяжите их с переменными
print("Task1*****************************")
spisok1 = [1, 2, 3, 4, 5, 6, 7]
spisok2 = ['s','p','i','s','o','k']
print(spisok1[::])
print(spisok2[::])

#2 Извлеките из первого списка второй элемент
print("Task2*****************************")
print("2nd element of spisok1:", spisok1[1])

#3 Измените во втором списке последний элемент. Выведите список на экран
print("Task3*****************************")
spisok2[5] = 'R'
print(spisok2[::])

#4 Соедините оба списка в один, присвоив результат новой переменной. Выведите получившийся список на экран
print("Task4*****************************")
joined_spisok = spisok1 + spisok2
print("Joined spisok:", joined_spisok)

#5  "Снимите" срез из соединенного списка так, чтобы туда попали некоторые части
# обоих первых списков. Срез свяжите с очередной новой переменной. Выведите
# значение этой переменной.
print("Task5*****************************")
srez = joined_spisok[5:9]
print("Srez:", srez)

#6 Добавьте в список два новых элемента и снова выведите его.
print("Task6*****************************")
print("Spisok: ", joined_spisok)
joined_spisok.append(6)
print("Spisok with added element: ", joined_spisok)
joined_spisok.insert(11,'44')
print("Spisok with another added element: ", joined_spisok)

#7 Даны списки:
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].
# Нужно вернуть список, который состоит из элементов, общих для этих двух
# списков. -- !не использовать циклы
print("Task7*****************************")
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
set_a = set(a)
set_b = set(b)
set_c = set_a & set_b
print(list(set_c))

#8 Есть список: [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3] оставить в нем только уникальные
# значения. !не использовать цикл
print("Task8*****************************")
spisochek = [1, 2, 3, 4, 3, 2, 1, 4, 6, 7, 1, 8, 2, 3]
spisochek_without_dublicats = [6, 7, 8]
peresechenie = set(spisochek_without_dublicats) & set(spisochek)
print(list(peresechenie))

